// Mocks generated by Mockito 5.4.4 from annotations
// in pbl5_menu/test/settings_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i3;

import 'package:flutter/material.dart' as _i8;
import 'package:flutter_native_contact_picker/flutter_native_contact_picker.dart'
    as _i10;
import 'package:flutter_native_contact_picker/model/contact.dart' as _i11;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pbl5_menu/locale_provider.dart' as _i9;
import 'package:pbl5_menu/services/stt/i_tts_service.dart' as _i7;
import 'package:pbl5_menu/shared/database_helper.dart' as _i4;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_1 extends _i1.SmartFake implements _i3.Locale {
  _FakeLocale_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i4.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set database(_i5.Future<_i2.Database>? db) => super.noSuchMethod(
        Invocation.setter(
          #database,
          db,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i5.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i5.Future<_i2.Database>);

  @override
  _i5.Future<void> onCreate(
    _i2.Database? db,
    int? version,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onCreate,
          [
            db,
            version,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> onUpgrade(
    _i2.Database? db,
    int? oldVersion,
    int? newVersion,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onUpgrade,
          [
            db,
            oldVersion,
            newVersion,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> insertDefaultData(_i2.Database? db) => (super.noSuchMethod(
        Invocation.method(
          #insertDefaultData,
          [db],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> insertContact(
    String? name,
    String? phone,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertContact,
          [
            name,
            phone,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<Map<String, String>>> getContacts() => (super.noSuchMethod(
        Invocation.method(
          #getContacts,
          [],
        ),
        returnValue: _i5.Future<List<Map<String, String>>>.value(
            <Map<String, String>>[]),
      ) as _i5.Future<List<Map<String, String>>>);

  @override
  _i5.Future<void> deleteContact(String? name) => (super.noSuchMethod(
        Invocation.method(
          #deleteContact,
          [name],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> getPreferences() => (super.noSuchMethod(
        Invocation.method(
          #getPreferences,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<void> updatePreferences(
    double? fontSize,
    String? language,
    bool? isDarkTheme,
    double? speechRate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePreferences,
          [
            fontSize,
            language,
            isDarkTheme,
            speechRate,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, String>> getTtsSettings() => (super.noSuchMethod(
        Invocation.method(
          #getTtsSettings,
          [],
        ),
        returnValue: _i5.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i5.Future<Map<String, String>>);

  @override
  _i5.Future<void> updateTtsSettings(
    String? languageCode,
    String? voiceName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTtsSettings,
          [
            languageCode,
            voiceName,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> insertHome(
    double? latitude,
    double? longitude,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertHome,
          [
            latitude,
            longitude,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i6.LatLng?> getHomeLocation() => (super.noSuchMethod(
        Invocation.method(
          #getHomeLocation,
          [],
        ),
        returnValue: _i5.Future<_i6.LatLng?>.value(),
      ) as _i5.Future<_i6.LatLng?>);

  @override
  _i5.Future<void> resetDatabase() => (super.noSuchMethod(
        Invocation.method(
          #resetDatabase,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createDb(
    _i2.Database? db,
    int? version,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDb,
          [
            db,
            version,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [ITtsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockITtsService extends _i1.Mock implements _i7.ITtsService {
  MockITtsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void initializeTts() => super.noSuchMethod(
        Invocation.method(
          #initializeTts,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> speakLabels(
    List<dynamic>? detectedObjects,
    _i8.BuildContext? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #speakLabels,
          [
            detectedObjects,
            context,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateLanguage(
    String? newLanguageCode,
    String? newVoiceName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLanguage,
          [
            newLanguageCode,
            newVoiceName,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateSpeechRate(double? newSpeechRate) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSpeechRate,
          [newSpeechRate],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [LocaleProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocaleProvider extends _i1.Mock implements _i9.LocaleProvider {
  MockLocaleProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Iterable<_i3.Locale> get supportedLocales => (super.noSuchMethod(
        Invocation.getter(#supportedLocales),
        returnValue: <_i3.Locale>[],
      ) as Iterable<_i3.Locale>);

  @override
  set supportedLocales(Iterable<_i3.Locale>? _supportedLocales) =>
      super.noSuchMethod(
        Invocation.setter(
          #supportedLocales,
          _supportedLocales,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Locale get currentLocale => (super.noSuchMethod(
        Invocation.getter(#currentLocale),
        returnValue: _FakeLocale_1(
          this,
          Invocation.getter(#currentLocale),
        ),
      ) as _i3.Locale);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setLocale(_i3.Locale? locale) => super.noSuchMethod(
        Invocation.method(
          #setLocale,
          [locale],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FlutterNativeContactPicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterNativeContactPicker extends _i1.Mock
    implements _i10.FlutterNativeContactPicker {
  MockFlutterNativeContactPicker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i11.Contact?> selectContact() => (super.noSuchMethod(
        Invocation.method(
          #selectContact,
          [],
        ),
        returnValue: _i5.Future<_i11.Contact?>.value(),
      ) as _i5.Future<_i11.Contact?>);

  @override
  _i5.Future<List<_i11.Contact>?> selectContacts() => (super.noSuchMethod(
        Invocation.method(
          #selectContacts,
          [],
        ),
        returnValue: _i5.Future<List<_i11.Contact>?>.value(),
      ) as _i5.Future<List<_i11.Contact>?>);

  @override
  _i5.Future<_i11.Contact?> selectPhoneNumber() => (super.noSuchMethod(
        Invocation.method(
          #selectPhoneNumber,
          [],
        ),
        returnValue: _i5.Future<_i11.Contact?>.value(),
      ) as _i5.Future<_i11.Contact?>);
}
