// Mocks generated by Mockito 5.4.4 from annotations
// in pbl5_menu/test/risk_detection_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:io' as _i5;
import 'dart:ui' as _i8;

import 'package:audioplayers/audioplayers.dart' as _i7;
import 'package:camera/camera.dart' as _i2;
import 'package:flutter/material.dart' as _i6;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;
import 'package:pbl5_menu/features/voice_commands.dart' as _i14;
import 'package:pbl5_menu/services/picture_service.dart' as _i4;
import 'package:pbl5_menu/services/stt/i_tts_service.dart' as _i10;
import 'package:pbl5_menu/services/stt/stt_service.dart' as _i9;
import 'package:pbl5_menu/widgetState_provider.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCameraController_0 extends _i1.SmartFake
    implements _i2.CameraController {
  _FakeCameraController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImageDecoder_2 extends _i1.SmartFake implements _i4.ImageDecoder {
  _FakeImageDecoder_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultipartFileWrapper_3 extends _i1.SmartFake
    implements _i4.MultipartFileWrapper {
  _FakeMultipartFileWrapper_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_4 extends _i1.SmartFake implements _i5.File {
  _FakeFile_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultipartRequest_5 extends _i1.SmartFake
    implements _i3.MultipartRequest {
  _FakeMultipartRequest_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_6 extends _i1.SmartFake implements _i6.Widget {
  _FakeWidget_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeAudioPlayer_7 extends _i1.SmartFake implements _i7.AudioPlayer {
  _FakeAudioPlayer_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_8 extends _i1.SmartFake implements _i8.Locale {
  _FakeLocale_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSttService_9 extends _i1.SmartFake implements _i9.SttService {
  _FakeSttService_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeITtsService_10 extends _i1.SmartFake implements _i10.ITtsService {
  _FakeITtsService_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidgetStateProvider_11 extends _i1.SmartFake
    implements _i11.WidgetStateProvider {
  _FakeWidgetStateProvider_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PictureService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPictureService extends _i1.Mock implements _i4.PictureService {
  MockPictureService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CameraController get controller => (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeCameraController_0(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.CameraController);

  @override
  set controller(_i2.CameraController? _controller) => super.noSuchMethod(
        Invocation.setter(
          #controller,
          _controller,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Client get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i3.Client);

  @override
  set httpClient(_i3.Client? _httpClient) => super.noSuchMethod(
        Invocation.setter(
          #httpClient,
          _httpClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isCameraInitialized => (super.noSuchMethod(
        Invocation.getter(#isCameraInitialized),
        returnValue: false,
      ) as bool);

  @override
  set isCameraInitialized(bool? _isCameraInitialized) => super.noSuchMethod(
        Invocation.setter(
          #isCameraInitialized,
          _isCameraInitialized,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.ImageDecoder get imageDecoder => (super.noSuchMethod(
        Invocation.getter(#imageDecoder),
        returnValue: _FakeImageDecoder_2(
          this,
          Invocation.getter(#imageDecoder),
        ),
      ) as _i4.ImageDecoder);

  @override
  set imageDecoder(_i4.ImageDecoder? _imageDecoder) => super.noSuchMethod(
        Invocation.setter(
          #imageDecoder,
          _imageDecoder,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.MultipartFileWrapper get multipartFileWrapper => (super.noSuchMethod(
        Invocation.getter(#multipartFileWrapper),
        returnValue: _FakeMultipartFileWrapper_3(
          this,
          Invocation.getter(#multipartFileWrapper),
        ),
      ) as _i4.MultipartFileWrapper);

  @override
  set multipartFileWrapper(_i4.MultipartFileWrapper? _multipartFileWrapper) =>
      super.noSuchMethod(
        Invocation.setter(
          #multipartFileWrapper,
          _multipartFileWrapper,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.File Function(String) get fileFactory => (super.noSuchMethod(
        Invocation.getter(#fileFactory),
        returnValue: (String path) => _FakeFile_4(
          this,
          Invocation.getter(#fileFactory),
        ),
      ) as _i5.File Function(String));

  @override
  set fileFactory(_i5.File Function(String)? _fileFactory) =>
      super.noSuchMethod(
        Invocation.setter(
          #fileFactory,
          _fileFactory,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.MultipartRequestFactory get multipartRequestFactory =>
      (super.noSuchMethod(
        Invocation.getter(#multipartRequestFactory),
        returnValue: (
          String method,
          Uri url,
        ) =>
            _FakeMultipartRequest_5(
          this,
          Invocation.getter(#multipartRequestFactory),
        ),
      ) as _i4.MultipartRequestFactory);

  @override
  set multipartRequestFactory(
          _i4.MultipartRequestFactory? _multipartRequestFactory) =>
      super.noSuchMethod(
        Invocation.setter(
          #multipartRequestFactory,
          _multipartRequestFactory,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<void> setupCamera() => (super.noSuchMethod(
        Invocation.method(
          #setupCamera,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> initializeCamera() => (super.noSuchMethod(
        Invocation.method(
          #initializeCamera,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void disposeCamera() => super.noSuchMethod(
        Invocation.method(
          #disposeCamera,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Widget getCameraPreview() => (super.noSuchMethod(
        Invocation.method(
          #getCameraPreview,
          [],
        ),
        returnValue: _FakeWidget_6(
          this,
          Invocation.method(
            #getCameraPreview,
            [],
          ),
        ),
      ) as _i6.Widget);

  @override
  _i12.Future<void> takePicture({
    required String? endpoint,
    required dynamic Function(List<dynamic>)? onLabelsDetected,
    required dynamic Function(Duration)? onResponseTimeUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #takePicture,
          [],
          {
            #endpoint: endpoint,
            #onLabelsDetected: onLabelsDetected,
            #onResponseTimeUpdated: onResponseTimeUpdated,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<String> captureAndProcessImage() => (super.noSuchMethod(
        Invocation.method(
          #captureAndProcessImage,
          [],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #captureAndProcessImage,
            [],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<void> sendImageAndHandleResponse(
    String? filePath,
    String? endpoint,
    dynamic Function(List<String>)? onDetectedObjects,
    dynamic Function(Duration)? onResponseTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendImageAndHandleResponse,
          [
            filePath,
            endpoint,
            onDetectedObjects,
            onResponseTime,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  List<String> parseLabelsFromResponse(String? responseBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #parseLabelsFromResponse,
          [responseBody],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ITtsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockITtsService extends _i1.Mock implements _i10.ITtsService {
  MockITtsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void initializeTts() => super.noSuchMethod(
        Invocation.method(
          #initializeTts,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<void> speakLabels(List<dynamic>? detectedObjects) =>
      (super.noSuchMethod(
        Invocation.method(
          #speakLabels,
          [detectedObjects],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateLanguage(
    String? newLanguageCode,
    String? newVoiceName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLanguage,
          [
            newLanguageCode,
            newVoiceName,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateSpeechRate(double? newSpeechRate) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSpeechRate,
          [newSpeechRate],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [VoiceCommands].
///
/// See the documentation for Mockito's code generation for more information.
class MockVoiceCommands extends _i1.Mock implements _i14.VoiceCommands {
  MockVoiceCommands() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get riskTrigger => (super.noSuchMethod(
        Invocation.getter(#riskTrigger),
        returnValue: false,
      ) as bool);

  @override
  set riskTrigger(bool? _riskTrigger) => super.noSuchMethod(
        Invocation.setter(
          #riskTrigger,
          _riskTrigger,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get triggerVariable => (super.noSuchMethod(
        Invocation.getter(#triggerVariable),
        returnValue: 0,
      ) as int);

  @override
  set triggerVariable(int? _triggerVariable) => super.noSuchMethod(
        Invocation.setter(
          #triggerVariable,
          _triggerVariable,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.AudioPlayer get player => (super.noSuchMethod(
        Invocation.getter(#player),
        returnValue: _FakeAudioPlayer_7(
          this,
          Invocation.getter(#player),
        ),
      ) as _i7.AudioPlayer);

  @override
  set player(_i7.AudioPlayer? _player) => super.noSuchMethod(
        Invocation.setter(
          #player,
          _player,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, List<String>> get voiceCommands => (super.noSuchMethod(
        Invocation.getter(#voiceCommands),
        returnValue: <String, List<String>>{},
      ) as Map<String, List<String>>);

  @override
  List<String> get activationCommands => (super.noSuchMethod(
        Invocation.getter(#activationCommands),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set activationCommands(List<String>? _activationCommands) =>
      super.noSuchMethod(
        Invocation.setter(
          #activationCommands,
          _activationCommands,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Locale get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _FakeLocale_8(
          this,
          Invocation.getter(#locale),
        ),
      ) as _i8.Locale);

  @override
  set locale(_i8.Locale? _locale) => super.noSuchMethod(
        Invocation.setter(
          #locale,
          _locale,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.SttService get sttService => (super.noSuchMethod(
        Invocation.getter(#sttService),
        returnValue: _FakeSttService_9(
          this,
          Invocation.getter(#sttService),
        ),
      ) as _i9.SttService);

  @override
  set sttService(_i9.SttService? _sttService) => super.noSuchMethod(
        Invocation.setter(
          #sttService,
          _sttService,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.ITtsService get ttsServiceGoogle => (super.noSuchMethod(
        Invocation.getter(#ttsServiceGoogle),
        returnValue: _FakeITtsService_10(
          this,
          Invocation.getter(#ttsServiceGoogle),
        ),
      ) as _i10.ITtsService);

  @override
  set ttsServiceGoogle(_i10.ITtsService? _ttsServiceGoogle) =>
      super.noSuchMethod(
        Invocation.setter(
          #ttsServiceGoogle,
          _ttsServiceGoogle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.WidgetStateProvider get widgetStateProvider => (super.noSuchMethod(
        Invocation.getter(#widgetStateProvider),
        returnValue: _FakeWidgetStateProvider_11(
          this,
          Invocation.getter(#widgetStateProvider),
        ),
      ) as _i11.WidgetStateProvider);

  @override
  set widgetStateProvider(_i11.WidgetStateProvider? _widgetStateProvider) =>
      super.noSuchMethod(
        Invocation.setter(
          #widgetStateProvider,
          _widgetStateProvider,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isActivated => (super.noSuchMethod(
        Invocation.getter(#isActivated),
        returnValue: false,
      ) as bool);

  @override
  String get command => (super.noSuchMethod(
        Invocation.getter(#command),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#command),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void toggleActivation(bool? value) => super.noSuchMethod(
        Invocation.method(
          #toggleActivation,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<void> initialize(_i6.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [context],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> loadVoiceCommands() => (super.noSuchMethod(
        Invocation.method(
          #loadVoiceCommands,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> loadActivationCommands() => (super.noSuchMethod(
        Invocation.method(
          #loadActivationCommands,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void toggleVoiceControl() => super.noSuchMethod(
        Invocation.method(
          #toggleVoiceControl,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void startListening() => super.noSuchMethod(
        Invocation.method(
          #startListening,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleCommand(String? command) => super.noSuchMethod(
        Invocation.method(
          #handleCommand,
          [command],
        ),
        returnValueForMissingStub: null,
      );

  @override
  double calculateSimilarity(
    String? s1,
    String? s2,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateSimilarity,
          [
            s1,
            s2,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  int levenshteinDistance(
    String? s1,
    String? s2,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #levenshteinDistance,
          [
            s1,
            s2,
          ],
        ),
        returnValue: 0,
      ) as int);

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
