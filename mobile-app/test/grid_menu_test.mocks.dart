// Mocks generated by Mockito 5.4.4 from annotations
// in pbl5_menu/test/grid_menu_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:io' as _i5;
import 'dart:ui' as _i14;

import 'package:audioplayers/audioplayers.dart' as _i11;
import 'package:camera/camera.dart' as _i2;
import 'package:flutter/material.dart' as _i6;
import 'package:flutter/src/foundation/assertions.dart' as _i15;
import 'package:flutter/src/foundation/diagnostics.dart' as _i8;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;
import 'package:pbl5_menu/features/describe_environment.dart' as _i7;
import 'package:pbl5_menu/features/map_widget.dart' as _i16;
import 'package:pbl5_menu/features/money_identifier.dart' as _i10;
import 'package:pbl5_menu/features/ocr_widget.dart' as _i9;
import 'package:pbl5_menu/services/picture_service.dart' as _i4;
import 'package:pbl5_menu/services/stt/stt_service.dart' as _i18;
import 'package:pbl5_menu/services/tts/tts_service_google.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCameraController_0 extends _i1.SmartFake
    implements _i2.CameraController {
  _FakeCameraController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImageDecoder_2 extends _i1.SmartFake implements _i4.ImageDecoder {
  _FakeImageDecoder_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultipartFileWrapper_3 extends _i1.SmartFake
    implements _i4.MultipartFileWrapper {
  _FakeMultipartFileWrapper_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_4 extends _i1.SmartFake implements _i5.File {
  _FakeFile_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultipartRequest_5 extends _i1.SmartFake
    implements _i3.MultipartRequest {
  _FakeMultipartRequest_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_6 extends _i1.SmartFake implements _i6.Widget {
  _FakeWidget_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDescribeEnvironmentState_7 extends _i1.SmartFake
    implements _i7.DescribeEnvironmentState {
  _FakeDescribeEnvironmentState_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeStatefulElement_8 extends _i1.SmartFake
    implements _i6.StatefulElement {
  _FakeStatefulElement_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDiagnosticsNode_9 extends _i1.SmartFake
    implements _i6.DiagnosticsNode {
  _FakeDiagnosticsNode_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({
    _i8.TextTreeConfiguration? parentConfiguration,
    _i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info,
  }) =>
      super.toString();
}

class _FakeState_10<T extends _i6.StatefulWidget> extends _i1.SmartFake
    implements _i6.State<T> {
  _FakeState_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeOcrWidgetState_11 extends _i1.SmartFake
    implements _i9.OcrWidgetState {
  _FakeOcrWidgetState_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeMoneyIdentifierState_12 extends _i1.SmartFake
    implements _i10.MoneyIdentifierState {
  _FakeMoneyIdentifierState_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeAudioPlayer_13 extends _i1.SmartFake implements _i11.AudioPlayer {
  _FakeAudioPlayer_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PictureService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPictureService extends _i1.Mock implements _i4.PictureService {
  MockPictureService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CameraController get controller => (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeCameraController_0(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.CameraController);

  @override
  set controller(_i2.CameraController? _controller) => super.noSuchMethod(
        Invocation.setter(
          #controller,
          _controller,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Client get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i3.Client);

  @override
  set httpClient(_i3.Client? _httpClient) => super.noSuchMethod(
        Invocation.setter(
          #httpClient,
          _httpClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isCameraInitialized => (super.noSuchMethod(
        Invocation.getter(#isCameraInitialized),
        returnValue: false,
      ) as bool);

  @override
  set isCameraInitialized(bool? _isCameraInitialized) => super.noSuchMethod(
        Invocation.setter(
          #isCameraInitialized,
          _isCameraInitialized,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.ImageDecoder get imageDecoder => (super.noSuchMethod(
        Invocation.getter(#imageDecoder),
        returnValue: _FakeImageDecoder_2(
          this,
          Invocation.getter(#imageDecoder),
        ),
      ) as _i4.ImageDecoder);

  @override
  set imageDecoder(_i4.ImageDecoder? _imageDecoder) => super.noSuchMethod(
        Invocation.setter(
          #imageDecoder,
          _imageDecoder,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.MultipartFileWrapper get multipartFileWrapper => (super.noSuchMethod(
        Invocation.getter(#multipartFileWrapper),
        returnValue: _FakeMultipartFileWrapper_3(
          this,
          Invocation.getter(#multipartFileWrapper),
        ),
      ) as _i4.MultipartFileWrapper);

  @override
  set multipartFileWrapper(_i4.MultipartFileWrapper? _multipartFileWrapper) =>
      super.noSuchMethod(
        Invocation.setter(
          #multipartFileWrapper,
          _multipartFileWrapper,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.File Function(String) get fileFactory => (super.noSuchMethod(
        Invocation.getter(#fileFactory),
        returnValue: (String path) => _FakeFile_4(
          this,
          Invocation.getter(#fileFactory),
        ),
      ) as _i5.File Function(String));

  @override
  set fileFactory(_i5.File Function(String)? _fileFactory) =>
      super.noSuchMethod(
        Invocation.setter(
          #fileFactory,
          _fileFactory,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.MultipartRequestFactory get multipartRequestFactory =>
      (super.noSuchMethod(
        Invocation.getter(#multipartRequestFactory),
        returnValue: (
          String method,
          Uri url,
        ) =>
            _FakeMultipartRequest_5(
          this,
          Invocation.getter(#multipartRequestFactory),
        ),
      ) as _i4.MultipartRequestFactory);

  @override
  set multipartRequestFactory(
          _i4.MultipartRequestFactory? _multipartRequestFactory) =>
      super.noSuchMethod(
        Invocation.setter(
          #multipartRequestFactory,
          _multipartRequestFactory,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<void> setupCamera() => (super.noSuchMethod(
        Invocation.method(
          #setupCamera,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> initializeCamera() => (super.noSuchMethod(
        Invocation.method(
          #initializeCamera,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void disposeCamera() => super.noSuchMethod(
        Invocation.method(
          #disposeCamera,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Widget getCameraPreview() => (super.noSuchMethod(
        Invocation.method(
          #getCameraPreview,
          [],
        ),
        returnValue: _FakeWidget_6(
          this,
          Invocation.method(
            #getCameraPreview,
            [],
          ),
        ),
      ) as _i6.Widget);

  @override
  _i12.Future<void> takePicture({
    required String? endpoint,
    required dynamic Function(List<dynamic>)? onLabelsDetected,
    required dynamic Function(Duration)? onResponseTimeUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #takePicture,
          [],
          {
            #endpoint: endpoint,
            #onLabelsDetected: onLabelsDetected,
            #onResponseTimeUpdated: onResponseTimeUpdated,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<String> captureAndProcessImage() => (super.noSuchMethod(
        Invocation.method(
          #captureAndProcessImage,
          [],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #captureAndProcessImage,
            [],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<void> sendImageAndHandleResponse(
    String? filePath,
    String? endpoint,
    dynamic Function(List<String>)? onDetectedObjects,
    dynamic Function(Duration)? onResponseTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendImageAndHandleResponse,
          [
            filePath,
            endpoint,
            onDetectedObjects,
            onResponseTime,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  List<String> parseLabelsFromResponse(String? responseBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #parseLabelsFromResponse,
          [responseBody],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DescribeEnvironment].
///
/// See the documentation for Mockito's code generation for more information.
class MockDescribeEnvironment extends _i1.Mock
    implements _i7.DescribeEnvironment {
  MockDescribeEnvironment() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.DescribeEnvironmentState createState() => (super.noSuchMethod(
        Invocation.method(
          #createState,
          [],
        ),
        returnValue: _FakeDescribeEnvironmentState_7(
          this,
          Invocation.method(
            #createState,
            [],
          ),
        ),
      ) as _i7.DescribeEnvironmentState);

  @override
  _i6.StatefulElement createElement() => (super.noSuchMethod(
        Invocation.method(
          #createElement,
          [],
        ),
        returnValue: _FakeStatefulElement_8(
          this,
          Invocation.method(
            #createElement,
            [],
          ),
        ),
      ) as _i6.StatefulElement);

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  void debugFillProperties(_i15.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toStringShallow({
    String? joiner = r', ',
    _i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringShallow,
          [],
          {
            #joiner: joiner,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  String toStringDeep({
    String? prefixLineOne = r'',
    String? prefixOtherLines,
    _i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringDeep,
          [],
          {
            #prefixLineOne: prefixLineOne,
            #prefixOtherLines: prefixOtherLines,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  _i6.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i15.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_9(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i6.DiagnosticsNode);

  @override
  List<_i6.DiagnosticsNode> debugDescribeChildren() => (super.noSuchMethod(
        Invocation.method(
          #debugDescribeChildren,
          [],
        ),
        returnValue: <_i6.DiagnosticsNode>[],
      ) as List<_i6.DiagnosticsNode>);

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [MapWidget].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapWidget extends _i1.Mock implements _i16.MapWidget {
  MockMapWidget() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.State<_i16.MapWidget> createState() => (super.noSuchMethod(
        Invocation.method(
          #createState,
          [],
        ),
        returnValue: _FakeState_10<_i16.MapWidget>(
          this,
          Invocation.method(
            #createState,
            [],
          ),
        ),
      ) as _i6.State<_i16.MapWidget>);

  @override
  _i6.StatefulElement createElement() => (super.noSuchMethod(
        Invocation.method(
          #createElement,
          [],
        ),
        returnValue: _FakeStatefulElement_8(
          this,
          Invocation.method(
            #createElement,
            [],
          ),
        ),
      ) as _i6.StatefulElement);

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  void debugFillProperties(_i15.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toStringShallow({
    String? joiner = r', ',
    _i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringShallow,
          [],
          {
            #joiner: joiner,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  String toStringDeep({
    String? prefixLineOne = r'',
    String? prefixOtherLines,
    _i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringDeep,
          [],
          {
            #prefixLineOne: prefixLineOne,
            #prefixOtherLines: prefixOtherLines,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  _i6.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i15.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_9(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i6.DiagnosticsNode);

  @override
  List<_i6.DiagnosticsNode> debugDescribeChildren() => (super.noSuchMethod(
        Invocation.method(
          #debugDescribeChildren,
          [],
        ),
        returnValue: <_i6.DiagnosticsNode>[],
      ) as List<_i6.DiagnosticsNode>);

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [OcrWidget].
///
/// See the documentation for Mockito's code generation for more information.
class MockOcrWidget extends _i1.Mock implements _i9.OcrWidget {
  MockOcrWidget() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.OcrWidgetState createState() => (super.noSuchMethod(
        Invocation.method(
          #createState,
          [],
        ),
        returnValue: _FakeOcrWidgetState_11(
          this,
          Invocation.method(
            #createState,
            [],
          ),
        ),
      ) as _i9.OcrWidgetState);

  @override
  _i6.StatefulElement createElement() => (super.noSuchMethod(
        Invocation.method(
          #createElement,
          [],
        ),
        returnValue: _FakeStatefulElement_8(
          this,
          Invocation.method(
            #createElement,
            [],
          ),
        ),
      ) as _i6.StatefulElement);

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  void debugFillProperties(_i15.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toStringShallow({
    String? joiner = r', ',
    _i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringShallow,
          [],
          {
            #joiner: joiner,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  String toStringDeep({
    String? prefixLineOne = r'',
    String? prefixOtherLines,
    _i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringDeep,
          [],
          {
            #prefixLineOne: prefixLineOne,
            #prefixOtherLines: prefixOtherLines,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  _i6.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i15.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_9(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i6.DiagnosticsNode);

  @override
  List<_i6.DiagnosticsNode> debugDescribeChildren() => (super.noSuchMethod(
        Invocation.method(
          #debugDescribeChildren,
          [],
        ),
        returnValue: <_i6.DiagnosticsNode>[],
      ) as List<_i6.DiagnosticsNode>);

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [MoneyIdentifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoneyIdentifier extends _i1.Mock implements _i10.MoneyIdentifier {
  MockMoneyIdentifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.MoneyIdentifierState createState() => (super.noSuchMethod(
        Invocation.method(
          #createState,
          [],
        ),
        returnValue: _FakeMoneyIdentifierState_12(
          this,
          Invocation.method(
            #createState,
            [],
          ),
        ),
      ) as _i10.MoneyIdentifierState);

  @override
  _i6.StatefulElement createElement() => (super.noSuchMethod(
        Invocation.method(
          #createElement,
          [],
        ),
        returnValue: _FakeStatefulElement_8(
          this,
          Invocation.method(
            #createElement,
            [],
          ),
        ),
      ) as _i6.StatefulElement);

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  void debugFillProperties(_i15.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toStringShallow({
    String? joiner = r', ',
    _i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringShallow,
          [],
          {
            #joiner: joiner,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  String toStringDeep({
    String? prefixLineOne = r'',
    String? prefixOtherLines,
    _i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringDeep,
          [],
          {
            #prefixLineOne: prefixLineOne,
            #prefixOtherLines: prefixOtherLines,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  _i6.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i15.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_9(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i6.DiagnosticsNode);

  @override
  List<_i6.DiagnosticsNode> debugDescribeChildren() => (super.noSuchMethod(
        Invocation.method(
          #debugDescribeChildren,
          [],
        ),
        returnValue: <_i6.DiagnosticsNode>[],
      ) as List<_i6.DiagnosticsNode>);

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [TtsServiceGoogle].
///
/// See the documentation for Mockito's code generation for more information.
class MockTtsServiceGoogle extends _i1.Mock implements _i17.TtsServiceGoogle {
  MockTtsServiceGoogle() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.AudioPlayer get audioPlayer => (super.noSuchMethod(
        Invocation.getter(#audioPlayer),
        returnValue: _FakeAudioPlayer_13(
          this,
          Invocation.getter(#audioPlayer),
        ),
      ) as _i11.AudioPlayer);

  @override
  set audioPlayer(_i11.AudioPlayer? _audioPlayer) => super.noSuchMethod(
        Invocation.setter(
          #audioPlayer,
          _audioPlayer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get languageCode => (super.noSuchMethod(
        Invocation.getter(#languageCode),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#languageCode),
        ),
      ) as String);

  @override
  set languageCode(String? _languageCode) => super.noSuchMethod(
        Invocation.setter(
          #languageCode,
          _languageCode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get voiceName => (super.noSuchMethod(
        Invocation.getter(#voiceName),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#voiceName),
        ),
      ) as String);

  @override
  set voiceName(String? _voiceName) => super.noSuchMethod(
        Invocation.setter(
          #voiceName,
          _voiceName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get speechRate => (super.noSuchMethod(
        Invocation.getter(#speechRate),
        returnValue: 0.0,
      ) as double);

  @override
  set speechRate(double? _speechRate) => super.noSuchMethod(
        Invocation.setter(
          #speechRate,
          _speechRate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<void> initializeTts() => (super.noSuchMethod(
        Invocation.method(
          #initializeTts,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateLanguage(
    String? newLanguageCode,
    String? newVoiceName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLanguage,
          [
            newLanguageCode,
            newVoiceName,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateSpeechRate(double? newSpeechRate) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSpeechRate,
          [newSpeechRate],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> speakLabels(List<dynamic>? detectedObjects) =>
      (super.noSuchMethod(
        Invocation.method(
          #speakLabels,
          [detectedObjects],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [SttService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSttService extends _i1.Mock implements _i18.SttService {
  MockSttService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<void> initializeStt() => (super.noSuchMethod(
        Invocation.method(
          #initializeStt,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> startListening(dynamic Function(String)? onResult) =>
      (super.noSuchMethod(
        Invocation.method(
          #startListening,
          [onResult],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void stopListening() => super.noSuchMethod(
        Invocation.method(
          #stopListening,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void restartListening() => super.noSuchMethod(
        Invocation.method(
          #restartListening,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
